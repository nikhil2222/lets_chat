{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilkumar/Documents/letchat/LetsChat/client/src/components/chat/menu/Conversatations.jsx\",\n  _s = $RefreshSig$();\nimport styled from \"@emotion/styled\";\nimport { Box, Typography } from \"@mui/material\";\nimport { useContext } from \"react\";\nimport { AccountContext } from \"../../context/AccountProvider\";\nimport { setConversation } from \"../../../service/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Component = styled(Box)`\n    display:flex;\n    height:45px;\n    padding:13px 0;\n    cursor: pointer;\n`;\n_c = Component;\nconst Image = styled('img')({\n  width: 50,\n  height: 50,\n  borderRadius: '50%',\n  padding: '0 14px',\n  objectFit: 'cover'\n});\n_c2 = Image;\nconst Conversation = ({\n  user\n}) => {\n  _s();\n  const {\n    setPerson,\n    account\n  } = useContext(AccountContext);\n  const getUser = async () => {\n    setPerson(user);\n    await setConversation({\n      senderId: account.sub,\n      receiverId: user.sub\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Component, {\n    onClick: () => getUser(),\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: user.picture,\n        alt: \"dp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 8\n  }, this);\n};\n_s(Conversation, \"giVGPlvc+kl64UUiiyM885jypzk=\");\n_c3 = Conversation;\nexport default Conversation;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Component\");\n$RefreshReg$(_c2, \"Image\");\n$RefreshReg$(_c3, \"Conversation\");","map":{"version":3,"names":["styled","Box","Typography","useContext","AccountContext","setConversation","jsxDEV","_jsxDEV","Component","_c","Image","width","height","borderRadius","padding","objectFit","_c2","Conversation","user","_s","setPerson","account","getUser","senderId","sub","receiverId","onClick","children","src","picture","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","_c3","$RefreshReg$"],"sources":["/Users/nikhilkumar/Documents/letchat/LetsChat/client/src/components/chat/menu/Conversatations.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Box, Typography } from \"@mui/material\";\nimport { useContext } from \"react\";\nimport { AccountContext } from \"../../context/AccountProvider\";\nimport { setConversation } from \"../../../service/api\";\nconst Component = styled(Box)`\n    display:flex;\n    height:45px;\n    padding:13px 0;\n    cursor: pointer;\n`\n\nconst Image = styled('img')({\n    width:50,\n    height:50,\n    borderRadius:'50%',\n    padding: '0 14px',\n    objectFit:'cover'\n})\nconst Conversation = ({user}) =>{\n    const {setPerson, account} = useContext(AccountContext);\n    const getUser= async ()=>{\n        setPerson(user);\n        await setConversation({senderId : account.sub , receiverId: user.sub });\n    }\n    return(\n       <Component onClick={ ()=> getUser()}>\n        <Box>\n            <Image src={user.picture} alt=\"dp\"/>\n        </Box>\n        <Box>\n           <Box>\n            <Typography>\n                {user.name}\n            </Typography>\n           </Box>\n        </Box>\n       </Component>\n    )\n}\n\nexport default Conversation;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,iBAAiB;AACpC,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAC/C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,SAASC,eAAe,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvD,MAAMC,SAAS,GAAGR,MAAM,CAACC,GAAG,CAAE;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAAAQ,EAAA,GALKD,SAAS;AAOf,MAAME,KAAK,GAAGV,MAAM,CAAC,KAAK,CAAC,CAAC;EACxBW,KAAK,EAAC,EAAE;EACRC,MAAM,EAAC,EAAE;EACTC,YAAY,EAAC,KAAK;EAClBC,OAAO,EAAE,QAAQ;EACjBC,SAAS,EAAC;AACd,CAAC,CAAC;AAAAC,GAAA,GANIN,KAAK;AAOX,MAAMO,YAAY,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAI;EAAAC,EAAA;EAC5B,MAAM;IAACC,SAAS;IAAEC;EAAO,CAAC,GAAGlB,UAAU,CAACC,cAAc,CAAC;EACvD,MAAMkB,OAAO,GAAE,MAAAA,CAAA,KAAU;IACrBF,SAAS,CAACF,IAAI,CAAC;IACf,MAAMb,eAAe,CAAC;MAACkB,QAAQ,EAAGF,OAAO,CAACG,GAAG;MAAGC,UAAU,EAAEP,IAAI,CAACM;IAAI,CAAC,CAAC;EAC3E,CAAC;EACD,oBACGjB,OAAA,CAACC,SAAS;IAACkB,OAAO,EAAGA,CAAA,KAAKJ,OAAO,CAAC,CAAE;IAAAK,QAAA,gBACnCpB,OAAA,CAACN,GAAG;MAAA0B,QAAA,eACApB,OAAA,CAACG,KAAK;QAACkB,GAAG,EAAEV,IAAI,CAACW,OAAQ;QAACC,GAAG,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACN3B,OAAA,CAACN,GAAG;MAAA0B,QAAA,eACDpB,OAAA,CAACN,GAAG;QAAA0B,QAAA,eACHpB,OAAA,CAACL,UAAU;UAAAyB,QAAA,EACNT,IAAI,CAACiB;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEnB,CAAC;AAAAf,EAAA,CApBKF,YAAY;AAAAmB,GAAA,GAAZnB,YAAY;AAsBlB,eAAeA,YAAY;AAAC,IAAAR,EAAA,EAAAO,GAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAA5B,EAAA;AAAA4B,YAAA,CAAArB,GAAA;AAAAqB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}